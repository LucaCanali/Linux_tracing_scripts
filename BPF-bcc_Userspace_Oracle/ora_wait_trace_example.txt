The script ora_wait_trace.py attaches uprobes to some relevant fuctions in the callchain for Oracle wait events: kskthewt and kews_update_wait_time
The script reads from the function call parameters (CPU registers) the wait event details and prints them to stdout for tracing 
Run the script as root
Requires the environment variable ORACLE_HOME

Optional step:
create eventsname.sed by running (as oracle) the supplied script eventsname.sql
this provides translation from the wait event number to event name
stdbuf can be used when running in "streming mode" to avoid buffering effects in the output

Example:
# export ORACLE_HOME=/u01/app/oracle/product/11.2.0.4/rdbms

# stdbuf -oL ./ora_wait_trace.py -p 123| sed -f eventsname.sed

Start tracing oracle wait events... Hit Ctrl-C to end.
15:02:27  pid=10456 event=SQL*Net message from client wait_time=19430133
15:02:27  pid=10456 event=Disk file operations I/O wait_time=869
15:02:27  pid=10456 event=db file sequential read wait_time=434
15:02:27  pid=10456 event=db file sequential read wait_time=446
15:02:27  pid=10456 event=db file sequential read wait_time=430
15:02:27  pid=10456 event=SQL*Net message to client wait_time=6
15:02:27  pid=10456 event=db file sequential read wait_time=2494
15:02:27  pid=10456 event=db file scattered read wait_time=829
...

