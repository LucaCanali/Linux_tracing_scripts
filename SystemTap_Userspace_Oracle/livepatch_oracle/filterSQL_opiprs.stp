#!/usr/local/bin/stap
#
# This is a SystemTap script for filtering Oracle SQL, hooking on the parsing function opiprs in guru mode.
#    1. A SystemTap probe on the Oracle function opiprs is triggered at every hard parse operation
#    2. The SQL statement is matched against the user-defined KEYWORD_TO_BLOCK
#    3. If a match is found the SQL parsing is blocked (the Oracle session will receive an error)
#       This is implemented using an embedded C function: block_parse
#
# Note: This is example code, not intended for production use. It is unsupported and may cause instabilities.
# Requires SystemTap in guru mode
#
# Use: stap -g -v filterSQL_opiprs.stp
# Note: optionally add -x <pid> to limit the action to <pid> only (default is for all oracle sessions)
#
# The Oracle binary is expected to be in the PATH: export PATH=$PATH:$ORACLE_HOME/bin
# Run as privileged  user (root)
#
# Compatibility: Oracle 11.2.0.4 on RHEL/OL 6 and 7
#                Oracle 12.1.0.2 on RHEL/OL 6 and 7 with kernel up to 3.10.0-123.x
#                issue: will not work on 12c with Linux kernel version higher than 3.10.0-123.x 
#                       the incompatibility comes from uprobes
#                Use SystemTap version 2.5 or higher. 
#                Kernel debuginfo not needed for this probe.
#
# Author: Luca.Canali@cern.ch
# Created: November 2014, last updated: March 2016.
#

global KEYWORD_TO_BLOCK = "UNWANTED SQL"

function block_parse(pointersql:long) %{
    char *sqltext;
    sqltext = (char *) STAP_ARG_pointersql;
    /* Modify the SQL text by writing a 0 as first character, therefore forcing an empty string */ 
    /* This will cause Oracle to throw an error: ORA-00900 invalid SQL statement */
    sqltext[0] = 0;
%}

probe process("oracle").function("opiprs") {
   sqltext = user_string2(register("rsi"),"error")
   # debug code
   # sqllength = register("rdx")
   # printf("opiParse: arg2=%s, arg3=%d\n",sqltext,sqllength)
   if (isinstr(sqltext, KEYWORD_TO_BLOCK)) {
      printf("FOUND!\n")
      block_parse(register("rsi"))
   }
}

